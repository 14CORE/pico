This is an implementation of the algorithm described in the following paper:
	N. Markus, M. Frljak, I. S. Pandzic, J. Ahlberg and R. Forchheimer,
	A method for object detection based on pixel intensity comparisons,
	http://arxiv.org/abs/1305.4537

There are four different ways of invoking the program:
	1.
		Run the program without any arguments (this is equivalent to double-clicking the executable file).
		In this case, the program will attempt to find faces in a video stream obtained from a default webcam attached to the computer.
		The smallest face that can be detected fits roughly in a 100x100 pixel rectangle.
	2.
		Run the program by passing one integer, [MIN_FACE_SIZE], as a command line argument.
		The program will attempt to find faces in a video stream obtained from a default webcam attached to the computer.
		The smallest face that can be detected fits roughly in a [MIN_FACE_SIZE]x[MIN_FACE_SIZE] pixel rectangle.
		Example: ./exe 50
	3.
		Run the program by passing one integer, [MIN_FACE_SIZE], and path to the input image, [PATH], as command line arguments.
		The program will attempt to find faces in an image specified by [PATH].
		The smallest face that can be detected fits roughly in a [MIN_FACE_SIZE]x[MIN_FACE_SIZE] pixel rectangle.
		The program writes (to standard output) the number of detections and their positions and scales.
		Example: ./exe 50 /some-folder/image.jpg
	4.
		Run the program by passing one integer, [MIN_FACE_SIZE], path to the input image, [PATH1], and path to the output image, [PATH2], as command line arguments.
		The program will attempt to find faces in the image specified by [PATH1].
		The smallest face that can be detected fits roughly in a [MIN_FACE_SIZE]x[MIN_FACE_SIZE] pixel rectangle.
		The program outputs a new image to [PATH2].
		This image is just the one from [PATH1] with obtained detections drawn over it.
		Example: ./exe 50 /some-folder/input-image.jpg /some-other-folder/output-image.png

The program uses OpenCV to obtain data from webcams and to load/save images in common image formats (*.jpg, *.png, ...).
Thus, if you wish to redistribute it or its modifications in binary form, it has to reproduce the OpenCV license (read more at http://opencv.willowgarage.com/wiki/).

For any additional information contact me at nenad.markus@fer.hr